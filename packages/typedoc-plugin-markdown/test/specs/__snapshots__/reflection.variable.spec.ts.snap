// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Variable Reflection should compile object with symbol: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: objectWithSymbol

> \`const\` **objectWithSymbol**: \`object\`

Comments variable with symbol

## Type declaration

### \\[sym\\]

> **\\[sym\\]**: \`string\` = \`'value'\`

Comments for symbol

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile object with symbol: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Variable: objectWithSymbol

\`\`\`ts
const objectWithSymbol: object;
\`\`\`

Comments variable with symbol

## Type declaration

| Name | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| \`[sym]\` | \`string\` | 'value' | Comments for symbol |

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile type operator variable: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: typeOperatorVariable

> \`const\` **typeOperatorVariable**: unique \`symbol\`

Comments for typeOperatorVariable

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile type operator variable: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Variable: typeOperatorVariable

\`\`\`ts
const typeOperatorVariable: unique symbol;
\`\`\`

Comments for typeOperatorVariable

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to a string: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: stringVariable

> \`const\` **stringVariable**: \`"stringConstWithDefaultValue"\` = \`'stringConstWithDefaultValue'\`

A simple string variable

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to a string: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Variable: stringVariable

\`\`\`ts
const stringVariable: "stringConstWithDefaultValue" = 'stringConstWithDefaultValue';
\`\`\`

A simple string variable

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to an object literal: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: objectLiteralVariable

> \`const\` **objectLiteralVariable**: \`object\`

Comments for objectLiteralVariable

## See

xyz.com

## Type declaration

### valueA

> **valueA**: \`number\` = \`100\`

Comments for valueA

### valueB

> **valueB**: \`boolean\` = \`true\`

### valueX

> **valueX**: \`object\`

Comments for valueX

#### valueX.valueA

> **valueA**: \`number\`[]

Comment for valueX.valueA

#### valueX.valueY()

> **valueY**: (\`z\`) => \`object\`

##### Parameters

###### z

\`string\`

##### Returns

\`object\`

###### a

> **a**: \`string\` = \`'test'\`

###### b

> **b**: \`string\` = \`z\`

###### c

> **c**: \`object\`

###### c.a

> **a**: \`number\` = \`1\`

###### c.b

> **b**: \`number\` = \`2\`

#### valueX.valueZ

> **valueZ**: \`string\` = \`'foo'\`

### valueY()

> **valueY**: (\`unionParam\`, \`_undercoreParam_\`) => \`string\`

#### Parameters

##### unionParam

\`"a"\` | \`"b"\`

##### \\_undercoreParam\\_

\`string\`

#### Returns

\`string\`

## Source

[variables.ts:1](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to an object literal: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Variable: objectLiteralVariable

\`\`\`ts
const objectLiteralVariable: object;
\`\`\`

Comments for objectLiteralVariable

## See

xyz.com

## Type declaration

| Name | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| \`valueA\` | \`number\` | 100 | Comments for valueA |
| \`valueB\` | \`boolean\` | true | - |
| \`valueX\` | \`object\` | - | Comments for valueX |
| \`valueX.valueA\` | \`number\`[] | - | Comment for valueX.valueA |
| \`valueX.valueY\` | (\`z\`: \`string\`) => \`object\` | - | - |
| \`valueX.valueZ\` | \`string\` | 'foo' | - |
| \`valueY\` | (\`unionParam\`: \`"a"\` \\| \`"b"\`, \`_undercoreParam_\`: \`string\`) => \`string\` | - | - |

## Source

[variables.ts:1](http://source-url)
"
`;
